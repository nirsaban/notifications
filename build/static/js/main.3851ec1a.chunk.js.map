{"version":3,"sources":["helpers/axios.js","components/notification.component.jsx","pages/home/home.page.jsx","App.js","reportWebVitals.js","index.js"],"names":["url","window","location","origin","includes","baseURL","console","log","Axios","axios","create","headers","Notification","icon","hiddenNext","setHiddenNext","handleDelete","alert","timeDuration","type","msg","useState","open","setOpen","useEffect","setTimeout","Alert","variant","className","show","onClick","HomePage","state","setState","curInd","setCurInd","currComp","setCurrComp","uniqueId","uuidv4","a","get","data","timeForShowNew","dataEditMessage","map","edit_message","error","alertMessage","msgToLower","toLowerCase","replace","toUpperCase","notifications","interval","length","p","clearInterval","alertToRemove","post","prevState","filter","status","index","text","Math","round","random","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3851ec1a.chunk.js","sourcesContent":["import axios from 'axios';\r\nlet url = window.location.origin\r\nif(url.includes(\"local\")){\r\n    url = \"http://localhost:5000\"\r\n\r\n}\r\nconst baseURL = url\r\nconsole.log(baseURL)\r\nlet headers = {\r\n    'Content-Type': 'application/json'\r\n};\r\nconst Axios = axios.create({\r\n    baseURL:baseURL,\r\n    headers:headers\r\n})\r\n\r\n\r\n\r\n\r\nexport default Axios","import React,{useEffect,useState} from \"react\";\r\nimport './notification.css'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nconst Notification = ({icon,hiddenNext,setHiddenNext,handleDelete,alert,timeDuration,type,msg}) => {\r\n    const [open,setOpen] = useState(true)\r\n   \r\n    useEffect(() => {\r\n       setTimeout(() => {\r\n        setOpen(false)\r\n       },timeDuration * 1000)\r\n    }, [timeDuration]);\r\n\r\n    useEffect(() => {\r\n        if(hiddenNext){\r\n            setHiddenNext(false)\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <Alert  variant={type} className =\"col-md-3 d-flex\" show = {!hiddenNext ? open : false}  onClick = { () => handleDelete(alert) }>\r\n            <div className =\"col-md-1\"><i className={`fas ${icon}`}></i></div>\r\n            <div className =\"col-md-10\">{msg}</div> \r\n            <div className=\"flex-end col-md-1\">X</div>\r\n        </Alert>\r\n        )\r\n}\r\nexport default Notification\r\n\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport React,{useEffect,useState} from 'react';\r\nimport Axios from '../../helpers/axios';\r\nimport Notification from '../../components/notification.component'\r\n\r\nconst  HomePage = () =>  {\r\n\r\n  const [state,setState]  = useState({})\r\n  const [curInd,setCurInd] = useState(0)\r\n  const [currComp,setCurrComp] = useState([]);\r\n  const [hiddenNext,setHiddenNext] = useState(false)\r\n \r\n  useEffect(() => {\r\n  \r\n  let uniqueId =  uuidv4();\r\n    (async () => {\r\n        try {\r\n            const {data:{timeDuration,timeForShowNew,data}}  = await Axios.get(`http://localhost:5000/get_notifications?uniqueId=${uniqueId}`)\r\n            const dataEditMessage = data.map(alert => edit_message(alert))\r\n            setState({timeDuration:timeDuration,'timeForShowNew':timeForShowNew,'notifications':dataEditMessage,uniqueId:uniqueId})\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    })();\r\n  },[]);\r\n\r\nconst edit_message = alert => {\r\n        const alertMessage =   alert['text'].map(msg => {\r\n        let msgToLower = msg.toLowerCase()\r\n        if(msgToLower.includes(\"sale\")){\r\n            msg = msg + \"!\"\r\n        }\r\n        else if(msgToLower.includes(\"new\")){\r\n            msg =  \"~\"  + msg + \"~\"\r\n        }\r\n        if(msgToLower.includes('limited edition')){\r\n            msg =   msgToLower.replace('limited edition', 'limited edition'.toUpperCase());\r\n        }\r\n        return msg\r\n      })\r\n      alert['text'] = alertMessage\r\n      return alert\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(state.notifications){\r\n      const interval = setTimeout(()=>{\r\n        if(curInd < state.notifications.length-1) setCurInd(p=>p+1)\r\n        else setCurInd(0)\r\n        setCurrComp(p=>[...p,state.notifications[curInd]])\r\n      },state['timeForShowNew'] * 1000)\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [curInd,currComp,state]);\r\n\r\n  const handleDelete = async alertToRemove => {\r\n    try {\r\n      const {data:data}  = await Axios.post('http://localhost:5000/delete',{uniqueId:state.uniqueId,alertToRemove}) \r\n    \r\n      if(data['data'].length > 0 ){\r\n        console.log(data)\r\n         setState(prevState => ({ ...prevState, notifications: data['data'].map(alert => edit_message(alert)).filter(alert => alert.status)}));\r\n         setHiddenNext(true)\r\n       }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App d-flex justify-content-center flex-column align-items-center\">\r\n     {\r\n      state['notifications'] ? \r\n      currComp.map((alert,index) => {\r\n          return(\r\n            <Notification \r\n              key = {index}\r\n              type={alert.type}\r\n              msg={alert.text[Math.round(Math.random() * (alert.text.length - 1))]}\r\n              alert = {alert.alert} \r\n              timeDuration = {state.timeDuration} \r\n              handleDelete = {handleDelete}\r\n              hiddenNext = {hiddenNext}\r\n              setHiddenNext = {setHiddenNext}\r\n              icon = {alert.icon}\r\n            />\r\n          )\r\n        })\r\n       : \r\n       null\r\n     }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react';\nimport { Switch, Route} from 'react-router-dom';\nimport HomePage from './pages/home/home.page';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst App = () => {\n\n  return (\n    <div>\n      <Switch>\n        <Route\n             exact\n              path='/'\n              render={() => <HomePage />\n          }\n        />\n      </Switch>\n    </div>\n  );\n\n\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}